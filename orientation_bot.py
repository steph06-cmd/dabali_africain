import streamlit as st
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import time
import re
from datetime import datetime
import nltk

# Configuration de la page
st.set_page_config(
    page_title="Chatbot Restaurant Africain üç≤",
    page_icon="üçõ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Liste des mots vides fran√ßais adapt√©s au domaine restaurant africain
FRENCH_STOPWORDS = {
    'le', 'la', 'les', 'de', 'des', 'du', 'un', 'une', 'et', '√†', 'en', 'pour', 'avec', 'sur', 'au', 'aux',
    'ce', 'ces', 'dans', 'par', 'plus', 'ne', 'pas', 'que', 'qui', 'se', 'sa', 'son', 'ses', 'nous', 'vous',
    'ils', 'elles', '√™tre', 'avoir', 'faire', 'comme', 'mais', 'ou', 'donc', 'or', 'ni', 'car',
    'plat', 'plats', 'ingr√©dient', 'ingr√©dients', 'cuisson', 'r√©servation', 'menu',
    'commande', 'serveur', 'serveuse', 'client', 'clients', 'restaurant', 'table',
    'boisson', 'boissons', 'heure', 'heures', 'jour', 'jours', 'prix', 'tarif',
    'sp√©cialit√©', 'sp√©cialit√©s', 'africain', 'africaine', 'afrique', 'nourriture',
    'repas', 'd√©jeuner', 'd√Æner', 'go√ªter', 'service', 'commande', 'livraison',
    'allergie', 'allergies', 'intol√©rance', 'intol√©rances', 'v√©g√©tarien', 'v√©g√©tarienne',
    'vegan', 'sans', 'gluten', 'piment', '√©pic√©', 'douceur',
    'foutou', 'fufu', 'atti√©k√©', 'alloco', 'ceebu', 'j√´n', 'thiebou', 'dieune',
    't√¥', 'soupe', 'egusi', 'kedjenou', 'ayimolou', 'poulet', 'yassa', 'maf√©',
    'arachide', 'couscous', 'thi√©boudi√®ne', 'moambe', 'jollof', 'rice', 'bananes', 'plantains'
}

# Dictionnaire des descriptions des plats
DISH_DESCRIPTIONS = {
    'foutou': "üë®‚Äçüç≥ P√¢te de banane plantain, manioc ou igname, accompagnant les sauces.",
    'atti√©k√©': "üë®‚Äçüç≥ Semoule de manioc ferment√©e, servie avec poisson grill√©.",
    'alloco': "üë®‚Äçüç≥ Bananes plantains frites, croustillantes et moelleuses.",
    'ceebu j√´n': "üë®‚Äçüç≥ Riz au poisson s√©n√©galais, avec l√©gumes et sauce tomate.",
    'kedjenou': "üë®‚Äçüç≥ Rago√ªt de poulet ivoirien cuit √† l'√©touff√©e avec l√©gumes et √©pices."
}

# Base de connaissances enrichie
KNOWLEDGE_TEXT = """
Foutou est une p√¢te traditionnelle africaine faite √† base de manioc, d'igname ou de banane plantain.
Atti√©k√© est un plat ivoirien √† base de manioc ferment√©, souvent accompagn√© de poisson.
Alloco sont des bananes plantains frites, croustillantes et moelleuses.
Ceebu J√´n est un riz au poisson s√©n√©galais, souvent avec sauce tomate et l√©gumes.
Kedjenou est un poulet √©pic√© cuit √† l'√©touff√©e avec des l√©gumes.
Nos horaires sont de 11h00 √† 22h00 tous les jours.
R√©servez une table en appelant le 01 23 45 67 89.
Nous proposons du foutou, atti√©k√©, maf√©, yassa, alloco, etc.
La livraison est possible dans un rayon de 10 km.
Nous acceptons les paiements en esp√®ces, carte, Orange Money et Wave.
Merci pour votre visite et bon app√©tit !
"""

# Nettoyage du texte

def preprocess(text: str) -> str:
    text = text.lower()
    text = re.sub(r'[^\w\s]', ' ', text)
    words = [word for word in text.split() if word not in FRENCH_STOPWORDS]
    return ' '.join(words)

# Construction du corpus
@st.cache_data(show_spinner=False)
def build_corpus(text: str):
    sentences = [s.strip() for s in text.split('.') if s.strip()]
    processed = [preprocess(s) for s in sentences]
    vec = TfidfVectorizer()
    matrix = vec.fit_transform(processed)
    return sentences, matrix, vec

# R√©cup√©rer la meilleure r√©ponse

def get_response(sentences: list[str], matrix: np.ndarray, vec: TfidfVectorizer, query: str, threshold: float = 0.1):
    q_processed = preprocess(query)
    q_vec = vec.transform([q_processed])
    sims = cosine_similarity(q_vec, matrix).flatten()
    idx = int(np.argmax(sims))
    score = sims[idx]
    if score < threshold:
        return ("D√©sol√©, je n'ai pas compris votre demande.", score)
    return (sentences[idx], score)

# Application principale

def main():
    st.title("ü§ñ Chatbot Restaurant Africain")
    st.write("Posez vos questions sur notre menu, horaires, plats, etc.")

    with st.sidebar:
        st.image("https://cdn-icons-png.flaticon.com/512/1046/1046784.png", width=120)
        st.write("Bienvenue dans notre restaurant africain üá®üáÆ")
        st.write(f"üóìÔ∏è Aujourd'hui : {datetime.now().strftime('%d/%m/%Y')}")

    sentences, matrix, vec = build_corpus(KNOWLEDGE_TEXT)

    question = st.text_input("üí¨ Posez votre question :")

    if st.button("Envoyer") and question:
        with st.spinner("Recherche de r√©ponse..."):
            time.sleep(1)
            response, score = get_response(sentences, matrix, vec, question)

        st.write(f"**Question :** {question}")
        st.success(f"**R√©ponse :** {response}")
        st.caption(f"üîé Score de similarit√© : {round(score, 2)}")

        for dish, description in DISH_DESCRIPTIONS.items():
            if dish in response.lower():
                st.info(description)
                break

if __name__ == '__main__':
    main()
